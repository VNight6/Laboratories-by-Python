from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import random

# –°–ª–æ–≤–∞ —ñ –ø—ñ–¥–∫–∞–∑–∫–∏
categories = {
    "–¢–≤–∞—Ä–∏–Ω–∏": {
        "–õ–∏—Å–∏—Ü—è": ["–Ø —Ö–∏—Ç—Ä–∏–π —ñ —Ä—É–¥–∏–π, —á–∞—Å—Ç–æ –∂–∏–≤—É –≤ –ª—ñ—Å—ñ.", "–ú–æ—î —Ö—É—Ç—Ä–æ —è—Å–∫—Ä–∞–≤–æ-—Ä—É–¥–µ, –∞ —Ö–≤—ñ—Å—Ç –ø—É—Ö–Ω–∞—Å—Ç–∏–π."],
        "–í–æ–≤–∫": ["–Ø —Å—ñ—Ä–∏–π, –¥–∏–∫–∏–π —ñ –ø–æ–ª—é—é –≤ –∑–≥—Ä–∞—ó.", "–ú–µ–Ω–µ —á–∞—Å—Ç–æ –±–æ—è—Ç—å—Å—è, –∞–ª–µ —è –∑–∞—Ö–∏—â–∞—é —Å–≤–æ—é —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—é."],
        "–ë–æ–±–µ—Ä": ["–Ø –±—É–¥—É—é —Ö–∞—Ç–∫–∏ –Ω–∞ –≤–æ–¥—ñ —Ç–∞ –º–∞—é –ø–ª–∞—Å–∫–∏–π —Ö–≤—ñ—Å—Ç.", "–Ø –≥—Ä–∏–∑—É–Ω, —â–æ –≤–º—ñ—î –≥—Ä–∏–∑—Ç–∏ –¥–µ—Ä–µ–≤–∞."],
        "–•–æ—Ä—å–æ–∫": ["–Ø –º–∞–ª–µ–Ω—å–∫–∏–π, –≥–Ω—É—á–∫–∏–π —ñ –ø–æ–ª—é—é –Ω–∞ –º–∏—à–µ–π.", "–ú–æ—î —Ö—É—Ç—Ä–æ –±—É–≤–∞—î —Ç–µ–º–Ω–∏–º."],
    },
    "–§—Ä—É–∫—Ç–∏ —ñ –æ–≤–æ—á—ñ": {
        "–¢–∏–∫–≤–∞": ["–ú–µ–Ω–µ —á–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –Ω–∞ –•–µ–ª–ª–æ–≤—ñ–Ω.", "–Ø –≤–µ–ª–∏–∫–∏–π, –∫—Ä—É–≥–ª–∏–π —ñ –æ—Ä–∞–Ω–∂–µ–≤–æ–≥–æ –∫–æ–ª—å–æ—Ä—É."],
        "–Ø–±–ª—É–∫–æ": ["–Ø –∫—Ä—É–≥–ª–∏–π —Ñ—Ä—É–∫—Ç, —á–µ—Ä–≤–æ–Ω–∏–π –∞–±–æ –∑–µ–ª–µ–Ω–∏–π.", "–Ø –ø–∞–¥–∞—é –Ω–µ–¥–∞–ª–µ–∫–æ –≤—ñ–¥ –¥–µ—Ä–µ–≤–∞."],
        "–ü–æ–º—ñ–¥–æ—Ä": ["–Ø —á–µ—Ä–≤–æ–Ω–∏–π —ñ –∫—Ä—É–≥–ª–∏–π, –∞–ª–µ —è –Ω–µ —Ñ—Ä—É–∫—Ç.", "–ú–µ–Ω–µ –¥–æ–¥–∞—é—Ç—å –¥–æ —Å–∞–ª–∞—Ç—ñ–≤ —ñ —Å–æ—É—Å—ñ–≤."],
        "–û–≥—ñ—Ä–æ–∫": ["–Ø –∑–µ–ª–µ–Ω–∏–π, –¥–æ–≤–≥–∏–π —ñ —Ä–æ—Å—Ç—É –Ω–∞ –≥–æ—Ä–æ–¥—ñ.", "–Ø —Ö—Ä—É–º–∫–∏–π —ñ –¥–æ–¥–∞—é—Å—å –¥–æ —Å–∞–ª–∞—Ç—ñ–≤."],
    },
    "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞": {
        "–ë–ª–µ–ø—ñ–∫–∞": ["–¶–µ —Å–ª–æ–≤–æ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É '–ë'", "–¶–µ —Å–ª–æ–≤–æ –ø–æ–≤‚Äô—è–∑–∞–Ω–µ –∑ —ñ–º‚Äô—è–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º—ñ"],
    }
}

current_word = {}
current_category = {}
current_difficulty = {}
guess_count = {}

difficulty_levels = {
    "1": "–ª–µ–≥–∫–∏–π",
    "2": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
    "3": "–≤–∞–∂–∫–∏–π",
    "–ª–µ–≥–∫–∏–π": "–ª–µ–≥–∫–∏–π",
    "—Å–µ—Ä–µ–¥–Ω—ñ–π": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
    "–≤–∞–∂–∫–∏–π": "–≤–∞–∂–∫–∏–π"
}

def get_hints(word, category, difficulty):
    hints = categories[category][word]
    if difficulty == "–ª–µ–≥–∫–∏–π":
        return hints[:2]  # –ü–µ—Ä—à—ñ –¥–≤—ñ –ø—ñ–¥–∫–∞–∑–∫–∏
    elif difficulty == "—Å–µ—Ä–µ–¥–Ω—ñ–π":
        return random.sample(hints, 1)  # –û–¥–Ω–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ–¥–∫–∞–∑–∫–∞
    else:
        return [hints[-1]]  # –û—Å—Ç–∞–Ω–Ω—è, –Ω–∞–π—Å–∫–ª–∞–¥–Ω—ñ—à–∞ –ø—ñ–¥–∫–∞–∑–∫–∞

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.message.chat_id
    guess_count[chat_id] = 0
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –î–∞–≤–∞–π –∑—ñ–≥—Ä–∞—î–º–æ —É '–í–≥–∞–¥–∞–π —Å–ª–æ–≤–æ'! –û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:\n"
        "1. –¢–≤–∞—Ä–∏–Ω–∏\n"
        "2. –§—Ä—É–∫—Ç–∏ —ñ –æ–≤–æ—á—ñ\n"
        "3. –ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞\n"
        "–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∞–±–æ —ó—ó –Ω–∞–∑–≤—É."
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_text = update.message.text
    chat_id = update.message.chat_id

    if user_text in ["1", "–¢–≤–∞—Ä–∏–Ω–∏", "2", "–§—Ä—É–∫—Ç–∏ —ñ –æ–≤–æ—á—ñ", "3", "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞"]:
        if user_text in ["1", "–¢–≤–∞—Ä–∏–Ω–∏"]:
            current_category[chat_id] = "–¢–≤–∞—Ä–∏–Ω–∏"
            await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ:\n1. –õ–µ–≥–∫–∏–π\n2. –°–µ—Ä–µ–¥–Ω—ñ–π\n3. –í–∞–∂–∫–∏–π")
        elif user_text in ["2", "–§—Ä—É–∫—Ç–∏ —ñ –æ–≤–æ—á—ñ"]:
            current_category[chat_id] = "–§—Ä—É–∫—Ç–∏ —ñ –æ–≤–æ—á—ñ"
            await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ:\n1. –õ–µ–≥–∫–∏–π\n2. –°–µ—Ä–µ–¥–Ω—ñ–π\n3. –í–∞–∂–∫–∏–π")
        elif user_text in ["3", "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞"]:
            current_category[chat_id] = "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞"
            await select_word(update, context)
        return

    if current_category.get(chat_id):
        if current_category[chat_id] != "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞" and not current_difficulty.get(chat_id):
            if user_text in ["1", "2", "3", "–ª–µ–≥–∫–∏–π", "—Å–µ—Ä–µ–¥–Ω—ñ–π", "–≤–∞–∂–∫–∏–π"]:
                current_difficulty[chat_id] = difficulty_levels[user_text.lower()]
                await select_word(update, context)
            else:
                await update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–≤—ñ–¥. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑. –í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ:\n1. –õ–µ–≥–∫–∏–π\n2. –°–µ—Ä–µ–¥–Ω—ñ–π\n3. –í–∞–∂–∫–∏–π")
            return

        if current_word.get(chat_id):
            word = current_word[chat_id]
            if user_text.lower() == word.lower():
                await update.message.reply_text(f"–í—ñ—Ç–∞—é! üéâ –í–∏ –≤–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ '{word}'!")
                guess_count[chat_id] += 1
                if current_category[chat_id] == "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞" or guess_count[chat_id] >= 3:
                    await update.message.reply_text("–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î—è–∫—É—é –∑–∞ –≥—Ä—É! üëã")
                    del current_word[chat_id]
                    del current_category[chat_id]
                    if chat_id in current_difficulty:
                        del current_difficulty[chat_id]
                    del guess_count[chat_id]
                else:
                    await select_word(update, context)
            else:
                await update.message.reply_text("–ù—ñ, —Ü–µ –Ω–µ —Ç–µ —Å–ª–æ–≤–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑! üßê")
            return

async def select_word(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.message.chat_id
    category = current_category[chat_id]
    if category == "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞":
        word, hints = random.choice(list(categories[category].items()))
    else:
        difficulty = current_difficulty[chat_id]
        word, hints = random.choice(list(categories[category].items()))
    current_word[chat_id] = word
    hint = random.choice(hints) if category == "–ü—Å–µ–≤–¥–æ–Ω—ñ–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞" else random.choice(get_hints(word, category, difficulty))
    await update.message.reply_text(f"üîç –ü—ñ–¥–∫–∞–∑–∫–∞: {hint}")

async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.message.chat_id
    if chat_id in current_word:
        del current_word[chat_id]
    if chat_id in current_category:
        del current_category[chat_id]
    if chat_id in current_difficulty:
        del current_difficulty[chat_id]
    if chat_id in guess_count:
        del guess_count[chat_id]
    await update.message.reply_text("–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î—è–∫—É—é –∑–∞ –≥—Ä—É! üëã")

def main():
    app = ApplicationBuilder().token("7801316447:AAHTsN8c7pP-C8ZZ2jCZgb2sk2BFQLHb1Zo").build()

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CommandHandler("stop", stop))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    app.run_polling()
if __name__ == '__main__':
    main()
